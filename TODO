- run FFT in ear
    - freq range E2 (82Hz - C7 2093Hz)
        - 64-2048 in powers of 2
        - so want samples >= 4kHz
            - at 16Khz, that's 0.25s
            - at 44Khz, this 0.09s
            - require sample rate to be a multiple of this
            4K
    - output top N frequencies
    - maybe "the real note"
        - might be timbre specific
        - voice?

- have a rolling step on the FFT
    - don't read a full FFT worth in one go
    - read in steps
    - when we have a full window, run FFT
    - discard oldest step, add a new
    - loop

- freq as float?

- source wrappers
    - mute (by constant)
    - envelope (mute by function)

- should Mux on its own do the divide, or should the caller Wrap with a Scale?
    - is there value in the Mux-without-scale or not?

- add some tests
    - mix a couple of sines together
    - can we find fundamental?
    - even if quieter?

- generate or record some test samples

- define "expectation" file format
    - (time, expected note/expected freq)
    - midi?
        - golang impls of midi to use?

- add freq-semitone converter

- show nearest semitone and delta

- SDL display of semitone lines and current detections

- make a key-aware note converter based on semitone converter 
